/* Layout System */
.app-header {
  position: relative; /* Position relatively so it takes up layout space */
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-4);
  height: var(--header-element-height); /* Start visible by default */
  background-color: var(--color-base);
  transition: height var(--transition-duration-normal) var(--transition-easing), opacity var(--transition-duration-normal) var(--transition-easing);
  width: 100%; /* Ensure full width */
  box-sizing: border-box; /* Include padding in width calculation */
  overflow: hidden; /* Hide content when height is 0 */
  opacity: 1; /* Start visible */
}

/* Drag button that covers entire header area */
.header-drag-button {
  position: absolute;
  top: 0.5px; /* Leave small gap at top for native window controls */
  right: 0;
  bottom: 0;
  background-color: transparent;
  border: none;
  outline: none;
  cursor: default;
  z-index: 0;
  left: 45px;
  -webkit-app-region: drag; /* Make the button draggable */
  pointer-events: auto;
}

/* Ensure header content is above the drag button */
.app-header > *:not(.header-drag-button) {
  position: relative;
  z-index: 1;
  -webkit-app-region: no-drag; /* Prevent content from being draggable */
}

.app-header:not(.is-visible) {
  height: 0; /* Hide when not visible */
  opacity: 0; /* Make invisible */
}

/* Main container that holds sidebar and content */
.main-container {
  display: flex;
  flex: 1;
  width: 100%;
  height: calc(100vh - var(--header-element-height)); /* Account for header height */
  overflow: hidden; /* Prevent scrollbars during transitions */
  position: relative; /* For absolutely positioned children */
  min-height: 0; /* Allow flex item to shrink below content size */
  transition: height var(--transition-duration-normal) var(--transition-easing);
}

/* When header is hidden, main container takes full height */
.app-header:not(.is-visible) ~ .main-container {
  height: 100vh;
}

.content-area {
  flex: 1;
  display: flex;
  flex-direction: column;
  background-color: var(--color-base);
  padding: 0; /* Remove all padding to let webview fill completely */
  transition: margin-left var(--transition-duration-normal) var(--transition-easing);
  position: relative;
  height: 100%; /* Ensure it takes full height */
  min-height: 0; /* Allow flex item to shrink below content size */
}

/* Adjust content area when sidebar is visible */
.sidebar.is-visible ~ .content-area {
  margin-left: 0; /* No margin needed since sidebar is in normal flow */
}

/* Remove the complex pseudo-element hover detection */
/* .content-area::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 20px;
  z-index: 10;
  pointer-events: none;
}

.content-area:hover::before {
  pointer-events: auto;
} */

.is-hidden {
  height: 0 !important;
  opacity: 0 !important;
  pointer-events: none;
}

/* Platform-specific layouts are now in separate files:
   - 07-platforms/_macos.css
   - 07-platforms/_windows.css
*/

/* Focus overlay */
.focus-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.3);
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--transition-duration) var(--transition-easing);
  z-index: 1000;
}

.focus-overlay.is-active {
  opacity: 1;
  pointer-events: auto;
}

/* Hover detection zones for header and sidebar */
.hover-detection-zone {
  position: absolute;
  pointer-events: none;
  z-index: 10;
  transition: all var(--transition-duration-normal) var(--transition-easing);
}

.hover-detection-zone--top {
  top: 0;
  left: 0;
  right: 0;
  height: 40px; /* Match the trigger zone */
}

.hover-detection-zone--left {
  top: 0;
  left: 0;
  width: 20px; /* Match the trigger zone */
  bottom: 0;
}

/* Enable pointer events for detection zones */
.hover-detection-zone--top,
.hover-detection-zone--left {
  pointer-events: auto;
}

/* Expand hover zones when elements are visible */
.app-header.is-visible ~ .main-container .content-area .hover-detection-zone--top {
  height: var(--header-element-height); /* Expand to full header height */
}

.main-container .sidebar.is-visible ~ .content-area .hover-detection-zone--left {
  width: 200px; /* Expand to full sidebar width */
}

 

/* -------------------------------------------------------------------------- */
/*                        06-components/_buffer-button.css                     */
/* -------------------------------------------------------------------------- */

.buffer-button {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 20px; /* Same as the trigger zone */
  background: transparent;
  border: none;
  cursor: default;
  z-index: -1; /* Behind all other header content */
  pointer-events: none; /* Don't interfere with other interactions */
}

/* Only enable pointer events when header is visible to prevent glitching */
.app-header.is-visible .buffer-button {
  pointer-events: auto;
} 